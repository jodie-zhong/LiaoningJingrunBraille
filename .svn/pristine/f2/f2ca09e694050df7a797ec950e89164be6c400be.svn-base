define(function (require, exports, module) {
    "use strict";

    var util = require('../../../common/util');
    // 工作流类窗口继承自工作流Base
    var Base = require('../../other/base/book-base');

//  var topicManageListTpl = require('./change-record-list.tpl');
    
    var FLOW_APPLY = 'changeTheRecordsApplication'; // 变更备案申请表
    var FLOW_EXAMINE = 'toExamine'; // 部门负责人审核
    var FLOW_SIGN = 'sign' // 总编辑/副总编辑签署
    var FLOW_REGISTER = 'registrationRecord' // 备案登记
    var FLOW_INFORM = 'informDutyEditor' // 告知责编

    var Module = Base.extend(new function () {
        var that;

        this.deployKey = 'BrailleRecordChange';
        
        // 与我相关
        this.searchTaskAbout = '1';
        // 其他搜索选项
        this.searchParams = {};
        
        this.taskListAction = 'changeRecord/searchChangeRecordList.action';

		this.treeName='图书';

        this.searchFlowListId = 'searchBookId';

        /**
         * 选择行变更事件回调
         */
        this.onSelectRowChanged = function(){
        	// 暂时啥也不做
        };
        
        this.onCheckRowChanged = function() {
        	that.$('#btnChangeHandle').attr('disabled', 'disabled');
			that.$('#btnChangeBatch').attr('disabled', 'disabled');
			that.$('#btnChangeCheck').attr('disabled', 'disabled');
			
			var count = 0, flowId = null, users = null, bookIds = [], bookTopicIds = [], taskIds = [];
			var allApply = true, allExamine = true, allSign = true, allEwcord = true, allInform = true, allMe = true, allUnfinished = true, allNum = true;
			var userId = util.getUserInfo().userId;
			that.$('#workListTBody').find('tr[checked]').each(function() {
				flowId = $(this).attr('data-flowId');
				users = $(this).attr('data-users') || '';
				users = users ? users.split(',') : [];
				// 包含非变更备案申请表
				if(flowId !== FLOW_APPLY) {
					allApply = false;
				}
				// 包含非部门负责人审核
				if(flowId !== FLOW_EXAMINE) {
					allExamine = false;
				}
				// 包含非总编辑/副总编辑签署
				if(flowId !== FLOW_SIGN) {
					allSign = false;
				}
				// 包含非备案登记
				if(flowId !== FLOW_REGISTER) {
					allEwcord = false;
				}
				// 包含非告知责编
				if(flowId !== FLOW_INFORM) {
					allInform = false;
				}
				// 待我处理
				if(users.indexOf(userId) < 0) {
					allMe = false;
				}
				// 任务状态未完成
				if($(this).attr('data-taskState') === '2') {
					allUnfinished = false;
				}
				// 是否为第一个节点
                if ($(this).attr('data-num') === '1') {
                	allNum = false;
                }
				bookIds.push($(this).attr('data-bookId'));
				bookTopicIds.push($(this).attr('data-bookTopicId'));
				taskIds.push($(this).attr('data-taskId'));
				count++;
			});
			
			this.currentBookId = bookIds.join(',');
			this.currentBookTopicId = bookTopicIds.join(',');
			this.currentTaskId = taskIds.join(',');
			
			// 只选择了一条，查看可用
			if(count === 1) {
				// 查看可用
				if (allNum) {
					this.$('#btnChangeCheck').removeAttr('disabled');
				}
				// 变更备案申请表、部门负责人审核、总编辑/副总编辑签署、备案登记、告知责编可用
				if(allMe && allUnfinished && (allApply || allExamine || allSign || allEwcord || allInform)) {
					this.$('#btnChangeHandle').removeAttr('disabled');
				}
			}
			// 选择一条或多条
			if(count > 1) {
				// 全部都是部门负责人审核、总编辑/副总编辑签署
				if((allExamine || allSign) && allMe && allUnfinished) {
					this.$('#btnChangeBatch').removeAttr('disabled');
				}
			}
        };

        /**
         * 初始化页面事件
         */
        function initPageEvent() {
        	// 变更备案申请表
			that.$container.on('click', '#btnChangeHandle,#btnChangeBatch', function() {
				that.openPage('public/workflow/workflow-dialog', {
					flowInfoAction : 'common/searchBookFlowList.action',
					bookId: that.currentBookId,
					bookTopicId: that.currentBookTopicId,
					taskId: that.currentTaskId,
					deployId: that.deployKey
				});
			});

			// 查看
			that.$container.on('click', '#btnChangeCheck', function() {
				that.openPage('public/workflow/workflow-dialog', {
					flowInfoAction : 'common/searchBookFlowList.action',
					bookId: that.currentBookId,
					taskId: that.currentTaskId,
					deployId: that.deployKey,
					isView: true
				});
			});
        }

        /**
         * 初始化页面数据
         */
        function initPageData() {
        	that.$('#btnChangeHandle').attr('disabled', 'disabled');
			that.$('#btnChangeBatch').attr('disabled', 'disabled');
			that.$('#btnChangeCheck').attr('disabled', 'disabled');
        }

        /**
         * 初始化时被调用
         */
        this.onInit = function ($el, tpl, data, indexRef) {
            this._super($el, tpl, data, indexRef);
            that = this;
            // that.initTemplate(tpl, {});

            // 初始化数据前需要设置列表模板
//          this.listTpl = topicManageListTpl;

            // 初始化页面事件
            initPageEvent();

            // 初始化页面数据
            initPageData();

            // TODO: 测试
            // that.openPage('public/workflow/workflow-dialog', {});
            // that.openPage('public/file/file-upload', {});
        };

        /**
         * 页面返回事件
         * @param data
         */
        this.onBack = function (data) {
            this._super(data);

        };

        /**
         * 窗口缩放事件
         */
        this.onResize = function () {
            this._super();
        };

        /**
         * 页面销毁
         */
        this.onDestroy = function () {
            this._super();
        };


    }());

    module.exports = Module;
});