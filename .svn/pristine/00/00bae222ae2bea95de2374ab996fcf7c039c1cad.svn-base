define(function (require, exports, module) {
    "use strict";

    var ItemBase = require('../item-base');
    var util = require('../../../../../common/util.js');

    /**
     * Workflow Item
     */
    var Item = ItemBase.extend({
        // 保存/提交接口
        saveAction: 'cipApply/saveOrSubmitApply.action',

        // 批量保存/提交接口
        batchSaveAction: 'bookPrinted/doSaveOrSubmitBookPrint.action',

        // 查询接口
        detailAction: 'bookPrinted/searchFlowInfoList.action',

        getFormData:function () {
            var $form = this.$('#formEdit');
            // 先调用父类生成基本的数据结构
//      	var params = {};
            var params = this._super();
            var arrPrint=[];
            $form.find('tr').each(function(){
                var $el=$(this);
                var obj={};
                obj.readersServiceneedNum=$el.find('input').val();
                obj.bookPrintId=$el.attr("data-printId");
                arrPrint.push(obj);
            });
            console.log(arrPrint);
            params.handle_state=$('input[name="handle_state"]:checked').val();
            params.handleContentOne=$('input[name="handleContentOne"]').val();
            console.log(params);
            return params;
        },


        /**
         * 初始化页面事件
         */
        initPageEvent: function () {
            var that = this;


        },

        /**
         * 初始化页面数据
         */
        initPageData: function () {
        },

        /**
         * 构造函数
         * @param container
         * @param tpl
         */
        init: function (container, tpl) {
            this._super(container, tpl);

        },
        /**
         * 渲染页面
         */
        render: function () {
            this._super();

            this.initPageEvent();

            this.initPageData();
        }

    });


    module.exports = Item;

});

