define(function (require, exports, module) {
    "use strict";

    var util = require('../../../common/util');
    var PageBase = require('../../../common/base-dialog');
    var FileUpload = require('./upload');


    var Module = PageBase.extend(new function () {
        var that;
        // 限制文件类型
        var fileType = '';
        // 限制文件大小
        var fileSize = 10 * 1024 * 1024;
        // 停止查询进度
        var stop = false;
        // 查询进度间隔
        var queryInterval = 1000;

        /**
         * 开始查询上传进度
         */
        function statrUploadProcess() {
            util.sendRequest({
                action: 'common/getStatus.action',
                success: function (resp) {
                    if(resp && resp.code === 0){
                        setProgress(resp.data.percent);
                    }
                    // 如果已经设置停止了则不再查询
                    if(stop){
                        return;
                    }
                    // 每隔三秒查一次
                    setTimeout(statrUploadProcess, queryInterval);
                },
                error: function (xhr) {
                    console.log(xhr);
                    if(stop){
                        return;
                    }
                    setTimeout(statrUploadProcess, queryInterval);
                }
            });
        }

        /**
         * 开始文件上传
         */
        function doFileUpload() {
            // 禁用界面文件和按钮
            // that.$('#inputFileUpload').attr('disabled', 'disabled');
            that.$('#btnFileUpload').attr('disabled', 'disabled');

            // 象征性的显示一点进度
            setProgress(0);

            // 准备上传
            var fileUpload = new FileUpload();
            fileUpload.setFiles([that.$('#inputFileUpload')[0]]);
            fileUpload.upload(util.getServerBase() + 'common/fileUpload.action', function (resp) {
                stop = true;
                // 进度更新到100
                setProgress(100);
                // 从html中解析报文
                var $resp = $(resp.responseText);
                resp = $resp.html();
                try{
                    resp = JSON.parse(resp);
                }catch(ex){
                    util.showAlert('文件上传失败！');
                    return;
                }

                if(resp.code === 0){
                    // 上传成功
                    var data = {
                        id: resp.data[0].filePath,
                        name: resp.data[0].fileName
                    };
                    that.close(data);
                } else {
                    that.close();
                    // 上传失败
                    util.showAlert(resp.message || '文件上传失败！');
                }
            });

            stop = false;
            setTimeout(statrUploadProcess, queryInterval);
            that.$('#inputFileUpload').attr('disabled', 'disabled');
        }

        /**
         * 文件更改
         */
        function fileChanged() {
            var $el = $(this);
            var file = $el[0].files[0];

            var suffix = file.name.toLowerCase();
            suffix = suffix.substr(suffix.lastIndexOf('.'));
            // 检查文件类型
            if (fileType) {
                if (fileType.indexOf(suffix) < 0) {
                    $el.val('');
                    util.showAlert('请选择指定的文件类型：' + fileType);
                    return;
                }
            }
            // 检查文件大小
            if (file.size > fileSize) {
                $el.val('');
                util.showAlert('文件体积不能大于 ' + (fileSize / (1024 * 1024)) + 'MB！');
                return;
            }

            // 生成预览
            if (suffix === '.png' || suffix === '.jpg' || suffix === '.bmp' || suffix === '.jpg') {
                setPreview(file);
            } else {
                setPreview('');
            }
        }

        /**
         * 生成图片预览
         * @param file
         */
        function setPreview(file) {
            if (file) {
                var reader = new FileReader();
                reader.onloadend = function () {
                    that.$('#uploadPreview').attr('src', reader.result);
                    that.$('#uploadPreview').css('display', 'block');
                };
                reader.readAsDataURL(file);
            } else {
                that.$('#uploadPreview').attr('src', '');
                that.$('#uploadPreview').hide();
            }
        }

        /**
         * 确定上传文件
         */
        function confirmUpload() {
            var $el = that.$('#inputFileUpload');
            var files = $el[0].files;
            if (files.length > 0) {
                // 进度归零后显示进度条
                setProgress(0);

                doFileUpload();

                that.$('#progressFileUpload').show();
            } else {
                util.showAlert('请选择文件后上传!');
            }
        }

        /**
         * 设置进度
         * @param percent
         */
        function setProgress(percent) {
            var $bar = that.$('#progressFileUpload');
            $bar.find('div').width(percent + '%');
            $bar.find('span').text(percent + '%');
        }

        /**
         * 初始化页面事件
         */
        function initPageEvent() {
            // 选择文件
            that.$container.on('change', '#inputFileUpload', fileChanged);

            // 确定上传
            that.$container.on('click', '#btnFileUpload', confirmUpload);
        }

        /**
         * 初始化页面数据
         */
        function initPageData() {

        }

        /**
         * 初始化时被调用
         */
        this.onInit = function ($el, tpl, data, indexRef) {
            this._super($el, tpl, data, indexRef);
            that = this;
            that.initTemplate(tpl, {});

            // 指定文件类型
            if (data && data.type) {
                fileType = data.type;
            } else {
                fileType = '';
            }
            // 指定文件大小
            if (data && data.maxSize) {
                fileSize = data.maxSize;
            } else {
                fileSize = 20 * 1024 * 1024;
            }
            // 初始化数据
            stop = false;

            // 初始化页面事件
            initPageEvent();

            // 初始化页面数据
            initPageData();
        };

        /**
         * 页面返回事件
         * @param data
         */
        this.onBack = function (data) {
            this._super(data);

        };

        /**
         * 窗口缩放事件
         */
        this.onResize = function () {
            this._super();
        };

        /**
         * 页面销毁
         */
        this.onDestroy = function () {
            this._super();
        };


    }());

    module.exports = Module;
});