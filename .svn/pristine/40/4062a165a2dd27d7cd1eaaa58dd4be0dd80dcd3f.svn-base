define(function (require, exports, module) {
    "use strict";

    var util = require('../../../common/util');
    var DialogBase = require('../../../common/base-dialog');
    var listTpl = require('./cip-version-search.tpl');
    var Module = DialogBase.extend(new function () {
        var that;
        var info = null;


        /**
         * 初始化页面事件
         */
        function initPageEvent() {
            // util.sendRequest({
            //     data: {bookIds:info.id},
            //     action: 'cipEditionApply/searchBookInfoList.action',
            //     success: function (resp) {
            //         console.log(resp);
            //         if (resp.code === 0) {
            //             that.initTemplate(listTpl, {});
            //         } else {
            //             // 业务执行失败
            //             util.showAlert(resp.message || '查询出错，请稍后重试！');
            //         }
            //     },
            //     error: function (xhr) {
            //         // XHR错误
            //         util.hideLoading();
            //         console.log(xhr);
            //         util.showAlert(resp.message ||  '查询出错，请稍后重试！');
            //     }
            // });
        }

        /**
         * 初始化页面数据
         */
        function initPageData() {

        }

        /**
         * 初始化时被调用
         */
        this.onInit = function ($el, tpl, data, indexRef) {
            this._super($el, tpl, data, indexRef);
            that = this;
            info = data;
            // console.log(info.data)
            that.initTemplate(tpl, {list:info.data});
            // 初始化页面事件
            initPageEvent();
            // 初始化页面数据
            initPageData();
        };

        /**
         * 页面返回事件
         * @param data
         */
        this.onBack = function (data) {
            this._super(data);

        };

        /**
         * 窗口缩放事件
         */
        this.onResize = function () {
            this._super();
        };

        /**
         * 页面销毁
         */
        this.onDestroy = function () {
            this._super();
        };


    }());

    module.exports = Module;
});
