define(function(require, exports, module) {
	"use strict";

	var ItemBase = require('../item-base');
	var util = require('../../../../../common/util.js');

	/**
	 * Workflow Item
	 */
	var Item = ItemBase.extend({
		// 保存/提交接口
        saveAction: 'printing/modifyPrinting.action',
        // 查询接口
        detailAction: 'printing/searchPrintingDetail.action',

		/**
		 * 初始化机器型号
		 */
		searchMachine: function() {
			util.sendRequest({
				data: {
					'code': '0011'
				},
				action: 'common/searchCodeValue.action',
				success: function(resp) {
					util.hideLoading();
					if(resp.code === 0) {
						var $typeOneElement = this.$('select[data-type = "machine"]'),
							$dom;
						for(var i in resp.data) {
							if(resp.data.hasOwnProperty(i)) {
								$dom = $('<option></option>');
								$dom.text(resp.data[i]);
								$dom.val(i);
								$typeOneElement.append($dom);
							}
						}
					} else {
						console.log(resp);
						util.showAlert(resp.message || '查询机器型号出错，请稍后重试！');
					}
				}.bind(this),
				error: function(xhr) {

				}
			});
		},
		// 下一流程
		onHandleChange: function () {
			var handle = this.$('input[name="handleState"]:checked').val();
            this.$('div[data-area="nextFlow"]').hide();
            if (handle === '1') {
                // 平印
                this.$('div[data-flow="flatPrint"]').show();
            } else if (handle === '2') {
                // 轮转
                this.$('div[data-flow="roundRobin"]').show();
            } 
		},
		// 工作天数添加
		onWorkdayPlus: function(){
			var workDay = this.$('#WorkDayTemplate').html();
			
			//workDay = this.$('div[data-area = "resultMap"]').eq(0).clone();
			$('div[data-area = "resultMap"]').after(workDay);
			this.searchButtonNum();
		},
		// 工作量添加
		onWorkContentPlus: function() {
			var workLoad = this.$('#WorkItemTemplate').html();
			
			//workLoad = this.$('tr[data-type="workload"]').eq(0).clone();
			//workLoad.find('input[type="text"]').val('');
			workLoad.appendTo('tbody[data-area = "workload"]');
			this.searchButtonNum();
			this.onWorkNum();
		},
		// 工作量删除
		onWorkContentMinus: function ($tr) {
			$tr.parents('tr[data-type="workload"]').remove();
			this.searchButtonNum($tr);
			this.onWorkNum();
		},
		// 工作量序号
		onWorkNum: function() {
			var i = 1;
			this.$('table tbody tr').each(function(){
				$(this).find('td[data-value="number"]').text(i++);
			});
		},
		// 判断有几条数据
		searchButtonNum: function($tr){
			var dayLength = this.$('div[data-area = "resultMap"]').length;
			if (dayLength !== 1) {
				this.$('button[data-type="day-minus"]').show();
			} else{
				this.$('button[data-type="day-minus"]').hide();
			}
			var workLength = this.$('tbody tr[data-type="workload"]').length;
			console.log(workLength);
			if (workLength !== 1) {
				this.$('button[data-type="work-minus"]').show();
			} else{
				this.$('button[data-type="work-minus"]').hide();
			}
		},

		/**
		 * 保存或提交工作流
		 * @param isSubmit
		 */
		getFormData: function() {
			var $form = this.$('#formEdit');
			// 先调用父类生成基本的数据结构
			var params = this._super();
			// 处理上传部份数据结构
			params.listClear = []; // 
			var $lab, index = 0;
			$form.find('div[data-time = "workTime"]').each(function() {
				$lab = $(this);
				params.listClear.push({
					mWorkloadDatetime: $lab.find('input[name="mWorkloadDatetime"]').val(),
					listOne : [] //工作量
				});
				var $tr;
				$form.find('tr[data-type="workload"]').each(function() {
					$tr = $(this);
					params.listClear[index].listOne .push({
						mWorkloadMachineModel: $tr.find('select[name="mWorkloadMachineModel"]').val(),
						mWorkloadOpenNum: $tr.find('input[name="mWorkloadOpenNum"]').val(),
						mWorkloadVersionNum: $tr.find('input[name="mWorkloadVersionNum"]').val(),
						mWorkloadPaperNum: $tr.find('input[name="mWorkloadPaperNum"]').val(),
						mWorkloadErrorRate: $tr.find('input[name="mWorkloadErrorRate"]').val(),
						taskId:$tr.find('input[name="taskId"]').val()
					});
				});
				index++;
			});

			console.log(params);
			return params;
		},

		/**
		 * 初始化页面事件
		 */
		initPageEvent: function() {
			var that = this;
			// 添加工作时间
			this.$container.on('click','button[data-type="day-plus"]',this.onWorkdayPlus.bind(this));
			// 删除工作时间
//			this.$container.on('click','button[data-type="day-minus"]', function(){
//          	that.onWorkdayMinus($(this));
//          });
			// 添加工作量
			this.$container.on('click','button[data-type="work-plus"]',this.onWorkContentPlus.bind(this));
			// 删除工作量
			this.$container.on('click','button[data-type="work-minus"]', function(){
            	that.onWorkContentMinus($(this));
            });
            // 下一流程
            this.$container.on('change', 'input[name="handleState"]', this.onHandleChange.bind(this));
		},

		/**
		 * 初始化页面数据
		 */
		initPageData: function() {
			// 初始化日期组件
			this.$('input.date-time').datetimepicker({
				format: 'YYYY-MM-DD',
				locale: 'zh-cn',
				sideBySide: true
			});
			this.searchMachine();
			this.searchButtonNum();
			this.onHandleChange();
		},

		/**
		 * 构造函数
		 * @param container
		 * @param tpl
		 */
		init: function(container, tpl) {
			this._super(container, tpl);
		},

		/**
		 * 渲染页面
		 */
		render: function() {
			this._super();

			this.initPageEvent();

			this.initPageData();
		}
	});

	module.exports = Item;

});