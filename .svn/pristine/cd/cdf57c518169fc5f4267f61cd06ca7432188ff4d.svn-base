define(function (require, exports, module) {
    "use strict";

    var ItemBase = require('../item-base');
    var util = require('../../../../../common/util.js');

    /**
     * Workflow Item
     */
    var Item = ItemBase.extend({
        // 保存/提交接口
        saveAction: 'cover/saveOrSubmitCover.action',

        // 查询接口
        detailAction: 'cover/searchCoverDetail.action',

        onHandleChange: function () {
            var handle = this.$('input[name="handleState"]:checked').val();
            this.$('div[data-area="nextFlow"]').hide();
            if (handle === '2') {
                //拒绝
                this.$('div[data-flow="devise"]').show();
            } else if (handle === '1') {
                //同意
                this.$('div[data-flow="coverPrinting"]').show();
            }
        },

        getFormData:function () {
            var $form = this.$('#formEdit');
            // 先调用父类生成基本的数据结构
//      	var params = {};
            var params = this._super();
            // 处理上传部份数据结构
            var arrAddress=[];
            $form.find('tr[data-type="ebook"]').each(function(){
                var $el=$(this);
                var obj={};
                obj.bookFascicleId=$el.attr('data-bookFascicleId');
                obj.bookFileId=$el.attr('data-bookFileId');
                obj.bookFileName=$el.find('input.bookAddress').val();
                obj.bookFileAddress=$el.find('input.bookAddress').attr('data-value');
                arrAddress.push(obj);
            });
            params.bookFascicleList=arrAddress;
            return params;
        },

        /**
         * 初始化页面事件
         */
        initPageEvent: function () {
            var that = this;
            this.$container.on('change', 'input[name="handleState"]', this.onHandleChange.bind(this));
        },

        /**
         * 初始化页面数据
         */
        initPageData: function () {
            this.onHandleChange();
            var arrUsers=[],arrIds=[];
            if($('#deputeUsers').attr('data-users')){
                if($('#deputeUsers').attr('data-users').indexOf(',') >-1 ){
                    arrUsers=$('#deputeUsers').attr('data-users').split(',');
                }else {
                    arrUsers[0]=$('#deputeUsers').attr('data-users');
                }
            }
            if($('#deputeUsers').attr('data-usersIds')){
                if($('#deputeUsers').attr('data-usersIds').indexOf(',') >-1 ){
                    arrIds=$('#deputeUsers').attr('data-usersIds').split(',');
                }else {
                    arrIds[0]=$('#deputeUsers').attr('data-usersIds');
                }
            }
            var $typeOneElement = this.$('#deputeUsers'),
                $dom;
            for(var i=0;i<arrUsers.length;i++){
                $dom = $('<option></option>');
                $dom.text(arrUsers[i]);
                $dom.val(arrIds[i]);
                $typeOneElement.append($dom);
            }

            this.$container.on('click','.btn-download',function () {
                var $el=$(this);
                window.open(util.getServerBase() + 'common/downloadFile.action?path=' + encodeURIComponent($el.attr('data-download')), '_blank');
            })
        },

        /**
         * 构造函数
         * @param container
         * @param tpl
         */
        init: function (container, tpl) {
            this._super(container, tpl);
        },
        /**
         * 渲染页面
         */
        render: function () {
            this._super();

            this.initPageEvent();

            this.initPageData();
        }

    });


    module.exports = Item;

});

