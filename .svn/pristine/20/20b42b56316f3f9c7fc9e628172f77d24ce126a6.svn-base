define(function (require, exports, module) {
    "use strict";

    var ItemBase = require('../item-base');
    var util = require('../../../../../common/util.js');

    /**
     * Workflow Item
     */
    var Item = ItemBase.extend({
        // 保存/提交接口
        saveAction: 'cover/saveOrSubmitCover.action',

        // 查询接口
        detailAction: 'cover/searchCoverDetail.action',

        onHandleChange: function () {
            var handle = this.$('input[name="handleState"]:checked').val();
            this.$('div[data-area="nextFlow"]').hide();
            if (handle === '2') {
                //拒绝
                this.$('div[data-flow="devise"]').show();
            } else if (handle === '1') {
                //同意
                this.$('div[data-flow="coverPrinting"]').show();
            }
        },
        getFormData:function () {
            var $form = this.$('#formEdit');
            // 先调用父类生成基本的数据结构
//      	var params = {};
            var params = this._super();
            // 处理上传部份数据结构
            var arr=[];
            $form.find('tr[data-type="ebook"]').each(function(){
                var $el=$(this);
                var obj={};
                obj.bookFileId=$el.attr('data-bookFileId');
                obj.bookFileName=$el.find('input.bookAddress').val();
                obj.bookFileAddress=$el.find('input.bookAddress').attr('data-value');
                obj.bookFascicleId=$el.attr('data-bookFascicleId');
                obj.bookFascicleBookName=$el.find('.bookFileName').html();
                obj.bookFileType=$el.attr('data-bookFileType');
                obj.createDatetime=$el.find('.createDatetime').html();
                obj.createUserId=$el.attr('data-createUserId');
                arr.push(obj);
            });
            params.coverInfoEntities=arr;
            if($('.deputeHandleContentOne').length > 0){

                params.deputeReviewEntity.handleContentOne=$('.deputeHandleContentOne').val()||'';
                params.deputeReviewEntity.handleState=$('.deputeHandleContentOne:checked').val() || '';
            }
            params.deputeTaskUsers=$('.deputeUsers').find('input').attr('data-value');
            return params;
        },
        /**
         * 初始化页面事件
         */
        initPageEvent: function () {
            var that = this;
            this.$container.on('change', 'input[name="handleState"]', this.onHandleChange.bind(this));
            this.$container.on('click', '#depute', function () {
                var $el=$(this);
                var $deputeUsers=$el.parents('.deputeUsers').find('input');
                if($deputeUsers.attr('data-value')){
                    var params={
                        bookId:$el.attr('data-bookId'),
                        taskId:$el.attr('data-taskId'),
                        flowId:'responsibleEditorAudit',
                        deputeTaskUsers:$deputeUsers.attr('data-value')
                    };
                    util.showLoading();
                    util.sendRequest({
                        data: params,
                        action: 'cover/doDeputeReview.action',
                        success: function(resp) {
                            util.hideLoading();
                            if (resp.code === 0) {
                                util.showAlert(resp.message || '下发成功！',function () {
                                    that.$('#depute').attr('disabled', 'disabled');
                                });
                            } else{
                                util.showAlert(resp.message || '删除出错，请稍后重试！');
                            }
                        },
                        error: function(xhr) {
                            // XHR错误
                            util.hideLoading();
                            console.log(xhr);
                            util.showAlert('删除出错，请稍后重试！');
                        }
                    });
                }
            });
        },

        /**
         * 初始化页面数据
         */
        initPageData: function () {
            this.onHandleChange();
            this.$container.on('click','.address',function () {
                var $el=$(this);
                if($el.attr('data-address')){
                    window.open(util.getServerBase() + 'common/downloadFile.action?path=' + encodeURIComponent($el.attr('data-address')), '_blank');
                }
            });
        },

        /**
         * 构造函数
         * @param container
         * @param tpl
         */
        init: function (container, tpl) {
            this._super(container, tpl);
        },
        /**
         * 渲染页面
         */
        render: function () {
            this._super();

            this.initPageEvent();

            this.initPageData();
        }

    });


    module.exports = Item;

});

