define(function (require, exports, module) {
    "use strict";

    var ItemBase = require('../item-base');
    var that;

    /**
     * Workflow Item
     */
    module.exports = ItemBase.extend({
        // 保存/提交接口
        saveAction: 'tpr/saveOrSubmitTrpTask.action',
        // 批量保存/提交接口
        batchSaveAction: 'tpr/batchSaveOrSubmitTrpTask.action',
        // 查询接口
        detailAction: 'tpr/searchTrpDetail.action',

        /**
         * 是否同意切换
         */
        confirmChange: function () {
            var selectionRow = that.$(this).parents('tr');
            var inputEm = selectionRow.find("input[name='disAgreeReason']");
            var fasciculeId = selectionRow.attr('data-fascicule-id');
            var diffTb = that.$('#diffTb');
            var diffRow = diffTb.find("tr[data-fascicule-id='" + fasciculeId + "']");
            var diffCountTd;
            var diffCount;
            // 同意
            if (that.$(this).attr('checked') === 'checked') {
                inputEm.removeAttr('data-fv-notempty');
                inputEm.removeAttr('data-fv-notempty-message');
                // 添加行
                if (diffRow.length === 0) {
                    diffTb.append(
                        "<tr data-fascicule-id='" + fasciculeId + "'>" +
                        "   <td>" + (diffTb.children().length + 1) + "</td>" +
                        "   <td>" + selectionRow.attr('data-fascicule-name') + "</td>" +
                        "   <td data-name='diffCount'>1</td>" +
                        "   <td data-name='diffRate'>" + (1 / that.data.info.tprQualityWordNum) + "</td>" +
                        "</tr>"
                    );
                }
                // 更新行数据
                else {
                    diffCountTd = diffRow.find('td[data-name="diffCount"]');
                    diffCount = parseInt(diffCountTd.text()) + 1;
                    diffCountTd.html(diffCount);
                    diffRow.find('td[data-name="diffRate"]').html(diffCount / that.data.info.tprQualityWordNum);
                }
                // 判断全选
                var allChacked = true;
                selectionRow.parent().find('input[name="agreeSelection"]').each(function () {
                    if (that.$(this).attr('checked') !== 'checked') {
                        allChacked = false;
                        return false;
                    }
                });
                if (allChacked) {
                    that.$(this).parents('table').find('input[name="agreeSelectionBatch"]').attr('checked', 'checked');
                }
            }
            // 不同意
            else {
                inputEm.attr('data-fv-notempty', 'true');
                inputEm.attr('data-fv-notempty-message', '请填写不同意原因');
                if (diffRow.length !== 0) {
                    diffCountTd = diffRow.find('td[data-name="diffCount"]');
                    diffCount = parseInt(diffCountTd.text());
                    // 删除行
                    if (diffCount <= 1) {
                        diffRow.remove();
                    }
                    // 更新行数据
                    else {
                        diffCount--;
                        diffCountTd.html(diffCount);
                        diffRow.find('td[data-name="diffRate"]').html(diffCount / that.data.info.tprQualityWordNum);
                    }
                }
                // 去掉全选
                that.$(this).parents('table').find('input[name="agreeSelectionBatch"]').removeAttr('checked');
            }
        },

        /**
         * 批量同意
         */
        confirmChangeBatch: function () {
            // 同意
            if (that.$(this).attr('checked') === 'checked') {
                that.$(this).parents('table').find('input[name="agreeSelection"]').each(function () {
                    that.$(this).attr('checked', 'checked');
                    var selectionRow = that.$(this).parents('tr');
                    var diffTb = that.$('#diffTb');
                    var inputEm = selectionRow.find("input[name='disAgreeReason']");
                    var fasciculeId = selectionRow.attr('data-fascicule-id');
                    var diffRow = diffTb.find("tr[data-fascicule-id='" + fasciculeId + "']");
                    inputEm.removeAttr('data-fv-notempty');
                    inputEm.removeAttr('data-fv-notempty-message');
                    // 添加行
                    if (diffRow.length === 0) {
                        diffTb.append(
                            "<tr data-fascicule-id='" + fasciculeId + "'>" +
                            "   <td>" + (diffTb.children().length + 1) + "</td>" +
                            "   <td>" + selectionRow.attr('data-fascicule-name') + "</td>" +
                            "   <td data-name='diffCount'>1</td>" +
                            "   <td data-name='diffRate'>" + (1 / that.data.info.tprQualityWordNum) + "</td>" +
                            "</tr>"
                        );
                    }
                    // 更新行数据
                    else {
                        var diffCountTd = diffRow.find('td[data-name="diffCount"]');
                        var diffCount = parseInt(diffCountTd.text()) + 1;
                        diffCountTd.html(diffCount);
                        diffRow.find('td[data-name="diffRate"]').html(diffCount / that.data.info.tprQualityWordNum);
                    }
                });
            }
            // 不同意
            else {
                that.$(this).parents('table').find('input[name="agreeSelection"]').removeAttr('checked');
                that.$('#diffTb').html('');
            }
        },

        /**
         * 计算差错
         */
        calculateDiff: function () {
            var diffInfo = [];
            that.$("#trueOrFalseTb").children().each(function () {
                if (that.$(this).find("input[name='agreeSelection']").attr('checked') === 'checked') {
                    var fasciculeId = that.$(this).attr("data-fascicule-id");
                    var idx = -1;
                    for (var i = 0; i < diffInfo.length; i++) {
                        if (diffInfo[i].fasciculeId === fasciculeId) {
                            idx = i;
                            break;
                        }
                    }
                    if (idx < 0) {
                        diffInfo.push({fasciculeId: fasciculeId, fasciculeName: that.$(this).attr("data-fascicule-name"), diffCount: 1});
                    } else {
                        diffInfo[idx].diffCount++;
                    }
                }
            });
            var diffTbHtml = "";
            for (var i = 0; i < diffInfo.length; i++) {
                diffTbHtml +=
                    "<tr  data-fascicule-id='" + diffInfo[i].fasciculeId + "'>" +
                    "   <td>" + (i + 1) + "</td>" +
                    "   <td>" + diffInfo[i].fasciculeName + "</td>" +
                    "   <td data-name='diffCount'>" + diffInfo[i].diffCount + "</td>" +
                    "   <td data-name='diffRate'>" + (diffInfo[i].diffCount / that.data.info.tprQualityWordNum) + "</td>" +
                    "</tr>";
            }
            that.$("#diffTb").html(diffTbHtml);
        },

        /**
         * 生成参数
         */
        getFormData: function () {
            var params = {qualityRightWrongEntities: [], bookWrongEntities: []};
            // 正误表数据
            that.$('#trueOrFalseTb').children().each(function () {
                params.qualityRightWrongEntities.push({
                    rigthWrongId: that.$(this).attr("data-right-wrong-id"),
                    checkResult: that.$(this).find("input[name='agreeSelection']").attr('checked') === 'checked' ? "1" : "2",
                    checkIdea: that.$(this).find("input[name='disAgreeReason']").val()
                });
            });
            // 差错表数据
            that.$('#diffTb').children().each(function () {
                params.bookWrongEntities.push({
                    bookFascicleId: that.$(this).attr("data-fascicule-id"),
                    bookWrongNum: that.$(this).find("td[data-name='diffCount']").text(),
                    bookWrongRate: that.$(this).find("td[data-name='diffRate']").text()
                });
            });
            params.handleContentOne = that.$("textarea[name='handleContentOne']").val();
            params.taskUsers = that.$("input[name='taskUsers']").attr('data-value');
            params.flowId = that.$("input[name='flowId']").val();
            params.flowName = that.$("input[name='flowName']").val();
            return params;
        },

        /**
         * 初始化页面事件
         */
        initPageEvent: function () {
            // 是否同意监听
            this.$container.on('change', 'input[name="agreeSelection"]', this.confirmChange);
            // 是否批量同意
            this.$container.on('change', 'input[name="agreeSelectionBatch"]', this.confirmChangeBatch);
        },

        /**
         * 初始化页面数据
         */
        initPageData: function () {
            this.calculateDiff();
        },

        /**
         * 构造函数
         * @param container
         * @param tpl
         */
        init: function (container, tpl) {
            this._super(container, tpl);
        },

        /**
         * 渲染页面
         */
        render: function () {
            this._super();
            that = this;
            this.initPageEvent();
            this.initPageData();
        }
    });
});