define(function(require, exports, module) {
    "use strict";

    var util = require('../../../common/util');
    var PageBase = require('../../../common/base-dialog');
    var listTpl = require('./print-audit-add-list.tpl');

    var Module = PageBase.extend(new function() {
        var that;
        var info=null;
        var currentPage = 1;

        /**
         * 图书列表
         */
        function searchBookList(){
            var params = {
                page: currentPage
            };
            util.showLoading();
            util.sendRequest({
                action: 'bookPrinted/chooseBook.action',
                data:params,
                success: function (resp) {
                    util.hideLoading();
                    console.log(resp);
                    if (resp.code === 0) {
                        that.$('#selectBookTbody').html(util.template(listTpl, {
                            list: resp.data.records
                        }));
                        // 分页
                        that.$('#selectBookPaging').html(that.buildPagination(resp.data.pageNow, resp.data.pageCount));
                    } else {
                        console.log(resp);
                        util.showAlert(resp.message || '查询图书出错，请稍后重试！');
                    }
                },
                error: function (xhr) {
                    // XHR错误
                    console.log(xhr);
                    util.showAlert(resp.message || '查询图书出错，请稍后重试！');
                }
            });
        }


        /**
         * 保存数据
         */
        function saveReportInfo(){
            util.showLoading();
            var $row;
            var ids = [];
            that.$('#selectBookTbody tr').each(function(){
                $row = $(this);
                if ($row.find('i[data-action="check"]').hasClass('fa-check-square-o')) {
                    ids.push($row.attr('data-printId'));
                }
            });
            var params={
                bookPrintIds:ids.join(','),
                bookPrintYear:info.year,
                bookPrintMonth:info.month
            }
            util.sendRequest({
                type: 'POST',
                data: params,
                action: 'bookPrinted/saveBook.action',
                success: function (resp) {
                    util.hideLoading();
                    console.log(resp);
                    if (resp.code === 0) {
                        // 业务执行成功
                        util.showAlert(resp.message ||'保存图书成功!', function(){
                            that.close({refresh: true});
                        });
                    } else {
                        // 业务执行失败
                        util.showAlert(resp.message ||'保存图书出错，请稍后重试！');
                    }
                },
                error: function (xhr) {
                    // XHR错误
                    util.hideLoading();
                    console.log(xhr);
                    util.showAlert('保存图书出错，请稍后重试！');
                }
            });
        }

        /**
         * 跳转页面
         */
        function jumpPage() {
            var $el = $(this);
            var page = $el.attr('data-page');
            if(page) {
                // 修改页面后重新刷新页面数据
                currentPage = page;
                searchBookList();
            }
        }

        /**
         * 初始化页面事件
         */
        function initPageEvent() {
            // 列头全选按钮
            that.$container.on('click', '#selectBookContainer thead i[data-action="check"]', function() {
                var $el = $(this);
                if($el.hasClass('fa-check-square-o')) {
                    // 取消全选
                    $el.removeClass('fa-check-square-o').addClass('fa-square-o');
                    $el.parents('table').find('tbody tr i[data-action="check"]').removeClass('fa-check-square-o').addClass('fa-square-o');
                } else {
                    // 全选
                    $el.removeClass('fa-square-o').addClass('fa-check-square-o');
                    $el.parents('table').find('tbody tr i[data-action="check"]').removeClass('fa-square-o').addClass('fa-check-square-o');
                }
            });

            // 勾选行
            that.$container.on('click', '#selectBookContainer tbody tr',function() {
                var $el = $(this);
                // 设置选择状态
                if($el.find('i[data-action="check"]').hasClass('fa-check-square-o')) {
                    $el.find('i[data-action="check"]').removeClass('fa-check-square-o').addClass('fa-square-o');
                } else {
                    $el.find('i[data-action="check"]').removeClass('fa-square-o').addClass('fa-check-square-o');
                }

                // 判断全选状态
                if($el.parents('tbody').find('i[data-action="check"]:not(.fa-check-square-o)').length === 0) {
                    $el.parents('table').find('thead i[data-action="check"]').removeClass('fa-square-o').addClass('fa-check-square-o');
                } else {
                    $el.parents('table').find('thead i[data-action="check"]').removeClass('fa-check-square-o').addClass('fa-square-o');
                }
            });
            // 分页
            that.$container.on('click', '#selectBookPaging a', jumpPage);
            // 选择按钮
            that.$container.on('click', '#btnBookCheckSelect', saveReportInfo);
        }

        /**
         * 初始化页面数据
         */
        function initPageData() {
            searchBookList();
        }

        /**
         * 初始化时被调用
         */
        this.onInit = function($el, tpl, data, indexRef) {
            this._super($el, tpl, data, indexRef);
            that = this;
            info = data;
            that.initTemplate(tpl, {});
            // bookDate=data;
            // 初始化页面事件
            initPageEvent();

            // 初始化页面数据
            initPageData();
        };

        /**
         * 页面返回事件
         * @param data
         */
        this.onBack = function(data) {
            this._super(data);

        };

        /**
         * 窗口缩放事件
         */
        this.onResize = function() {
            this._super();
        };

        /**
         * 页面销毁
         */
        this.onDestroy = function() {
            this._super();
        };

    }());

    module.exports = Module;
});