define(function (require, exports, module) {
    "use strict";

    var util = require('../../../common/util');
    var DialogBase = require('../../../common/base-dialog');
    var listTpl=require('./cip-version-apply-list.tpl');

    var Module = DialogBase.extend(new function () {
        var that;
        var info = null;

        /**
         * 初始化版署下发
         */

        function versionIssuedList() {
            util.showLoading();
            util.sendRequest({
                // data: info.currentBookId,
                action: 'cipEditionApply/doVersionIssued.action',
                success: function(resp) {
                    util.hideLoading();
                    console.log(resp);
                    if (resp.code === 0) {
                        util.showAlert(resp.message || '查询版署下发成功！');
                        that.$('#selectIssuedTable').html(util.template(listTpl, {list: resp.data.records}));
                    } else{
                        util.showAlert(resp.message || '查询版署下发出错，请稍后重试！');
                    }
                },
                error: function(xhr) {
                    // XHR错误
                    util.hideLoading();
                    console.log(xhr);
                    util.showAlert('查询版署下发出错，请稍后重试！');
                }
            });
        }
        
        
        /**
         * 保存数据
         */
        function saveReportInfo(){
            // 表单验证
            var $form = that.$('#formReportEdit');
            // 没有错误开始处理
            if (that.validate($form) === true) {
                // 通过公共方法生成表单参数
                var params = that.buildFormParams($form.find('input,textarea'));
                params.bookIds=bookDate.id;
                var action = 'cipEditionApply/createOrModifyApplication.action';
                var actionName = '新增';
                params.operation='1';
                // 如果有currentId则是修改
                if (info && info.reportTopicId) {
                    // action = 'cipEditionApply/createOrModifyApplicationBefore.action';
                    params.reportTopicId = info.reportTopicId;
                    actionName = '修改';
                    params.operation='2';
                }
                // 下发请求
                util.showLoading();
                util.sendRequest({
                    type: 'POST',
                    data: params,
                    action: "cipEditionApply/doSaveOrSubmitIssued.action",
                    success: function (resp) {
                        util.hideLoading();
                        console.log(resp);
                        if (resp.code === 0) {
                            // 业务执行成功
                            util.showAlert('数据保存成功!', function(){
                                that.close({refresh: true});
                            });
                        } else {
                            // 业务执行失败
                            util.showAlert(resp.message || actionName + '上报列表出错，请稍后重试！');
                        }
                    },
                    error: function (xhr) {
                        // XHR错误
                        util.hideLoading();
                        console.log(xhr);
                        util.showAlert(actionName + '上报列表出错，请稍后重试！');
                    }
                });
            }
        }

        /**
         * 初始化页面事件
         */
        function initPageEvent() {

            // 保存
            that.$container.on('click', '#btnCipSave', saveReportInfo);
            // 提交
            that.$container.on('click', '#btnCipSubmit', saveReportInfo);

        }

        /**
         * 初始化页面数据
         */
        function initPageData() {
            versionIssuedList()
            that.initValidate(that.$('#formReportEdit'));
        }

        /**
         * 初始化时被调用
         */
        this.onInit = function ($el, tpl, data, indexRef) {
            this._super($el, tpl, data, indexRef);
            that = this;
            info = data;

            that.initTemplate(tpl, {info: data});
            // 初始化页面事件
            initPageEvent();
            // 初始化页面数据
            initPageData();
        };

        /**
         * 页面返回事件
         * @param data
         */
        this.onBack = function (data) {
            this._super(data);

        };

        /**
         * 窗口缩放事件
         */
        this.onResize = function () {
            this._super();
        };

        /**
         * 页面销毁
         */
        this.onDestroy = function () {
            this._super();
        };


    }());

    module.exports = Module;
});