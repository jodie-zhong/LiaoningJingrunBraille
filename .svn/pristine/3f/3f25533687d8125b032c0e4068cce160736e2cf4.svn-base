define(function(require, exports, module) {
	"use strict";

	var ItemBase = require('../item-base');
	var util = require('../../../../../common/util.js');
	var valid = require('./validInput.js');

	/**
	 * Workflow Item
	 */
	var Item = ItemBase.extend({
		// 保存/提交接口
		saveAction: 'cnExamine/saveOrSubmitCnExamine.action',
		// 查询接口
		detailAction: 'cnExamine/searchCnExamineDetail.action',

		/**
		 * 是否分册判断
		 */
		onPagination: function() {
			var pagination = this.$('input[name="bookIsFascicle"]:checked').val();
			this.$('div[data-area="pageinfo"]').hide();
			if(pagination === '1') {
				this.$('div[data-area="pageinfo"]').hide();
			} else {
				this.$('div[data-area="pageinfo"]').show();
			}
		},
		/**
		 * 分册信息添加
		 */
		onPagePlus: function() {
			var pageCopy = this.$('div[data-area="fascicle"]').eq(0).clone();
			pageCopy.find('input, textarea').val('');
			pageCopy.appendTo('div[data-type="pageinfo"]');
			// 判断有几条数据
			this.searchMinusButton();
			this.addValidateField(this.$('input[name="bookFascicleBookName"]'));
		},
		
		/**
		 * 分册信息删除
		 */ 
		onPageMinus: function($btn) {
			$btn.parents('div[data-area="fascicle"]').remove();
			this.searchMinusButton();
		},
		
		/**
		 * 加工记录添加
		 */
		onMachPlus: function() {
			var machCopy;
			machCopy = this.$('div[data-area = "machining"]').eq(0).clone();
			machCopy.find('textarea').val('');
			machCopy.appendTo('div[data-type = "mach-record"]');
			this.searchMinusButton();
			this.machNum();
		},
		
		/**
		 * 加工记录删除
		 */
		onMachMinus: function($btn) {
			$btn.parents('div[data-area = "machining"]').remove();
			this.searchMinusButton();
			this.machNum();
		},

		/**
		 * 判断有几条数据
		 */
		searchMinusButton: function() {			
			//判断分册信息
			var fasLength = this.$('div[data-area="fascicle"]').length;
			if(fasLength !== 1) {
				this.$('button[data-type="page-minus"]').show();
			} else {
				this.$('button[data-type="page-minus"]').hide();
			}
			// 判断加工记录
			var machLength = this.$('div[data-area = "machining"]').length;
			if(machLength !== 1) {
				this.$('button[data-type="record-minus"]').show();
				this.$('button[data-type="record-plus"]').hide();
				this.$('button[data-type="record-plus"]').last().show();
			} else {
				this.$('button[data-type="record-minus"]').hide();
				this.$('button[data-type="record-plus"]').show();
			}
		},
		
		/**
		 * 加工记录序号
		 */
		machNum: function() {
			var i = 1;
			this.$('div[data-area="machining"]').each(function() {
				$(this).find('span[data-value = "number"]').text(i++);
			});
		},
		/**
		 * 处理意见判断
		 */
		onHandleChange: function() {
			var handle = this.$('input[name="handleState"]:checked').val();
			this.$('div[data-area="nextFlow"]').hide();
			if(handle === '1') {
				// 建议发稿
				this.$('div[data-flow="cnFirstRewirte"]').show();
			} else {
				// 退稿
				this.$('div[data-flow="abandoned"]').show();
			}
		},

		/**
		 * 保存或提交工作流
		 */
		getFormData: function() {
			var $form = this.$('#formEdit');
			// 先调用父类生成基本的数据结构
			var params = this._super();
			params.machiningRecordList = []; // 加工记录
			var $div;
			$form.find('div[data-area="machining"]').each(function() {
				$div = $(this);
				params.machiningRecordList.push({
					machiningRecord: $div.find('textarea[name="machiningRecord"]').val()
				});
			});
			params.fascicleList = []; // 分册信息
			var $info;
			$form.find('div[data-area="fascicle"]').each(function() {
				$info = $(this);
				params.fascicleList.push({
					bookFascicleBookName: $info.find('input[name="bookFascicleBookName"]').val(),
					bookFascicleLocation: $info.find('textarea[name="bookFascicleLocation"]').val()
				});
			});
			return params;
		},

		/**
		 * 初始化页面事件
		 */
		initPageEvent: function() {
			var that = this;
			// 判断是否分册
			this.$container.on('change', 'input[name="bookIsFascicle"]', this.onPagination.bind(this));
			// 分册信息增加
			this.$container.on('click', 'button[data-type="page-plus"]', this.onPagePlus.bind(this));
			// 分册信息删除
			this.$container.on('click', 'button[data-type="page-minus"]', function() {
				that.onPageMinus($(this));
			});
			// 加工记录增加
			
			this.$container.on('click', 'button[data-type="record-plus"]', this.onMachPlus.bind(this));
			// 加工记录删除
			this.$container.on('click', 'button[data-type="record-minus"]', function() {
				that.onMachMinus($(this));
			});
			// 初审报告
			this.$container.on('click','button[data-type = "report"]',this.onReport.bind(this));
			// 处理意见判断
//			this.$container.on('change', 'input[name="handleState"]', this.onHandleChange.bind(this));
			// 文件下载
//			that.$container.on('click','button[data-down="down"]', function() {
//				var flie = $(this).parents('tr[data-area="cover"]').find('input[name="bookFileName"]').attr('data-value');
//				if (flie) {
//					window.open(util.getServerBase() + 'common/downloadFile.action?path=' + encodeURIComponent(flie), '_blank');
//				}
//				var fasflie = $(this).parents('div[data-area="fascicle"]').find('input[name="bookFascicleName"]').attr('data-value');
//				if (fasflie) {
//					window.open(util.getServerBase() + 'common/downloadFile.action?path=' + encodeURIComponent(fasflie), '_blank');
//				}
//			});
			// 查看状态下文件下载                                                                                        
			that.$container.on('click', 'button[data-down="downView"]', function() {
				var fil = $(this).attr('data-address');
				if($(this).attr('data-address')) {
					window.open(util.getServerBase() + 'common/downloadFile.action?path=' + encodeURIComponent($(this).attr('data-address')), '_blank');
				}
			})
		},

		/**
		 * 初始化页面数据
		 */
		initPageData: function() {
			// // 判断是否分册
			this.onPagination();
			// 判断有几条数据
			this.searchMinusButton();
			// 处理意见判断
			this.onHandleChange();
			// 加工记录序号
			this.machNum();
		},

		/**
		 * 构造函数
		 * @param container
		 * @param tpl
		 */
		init: function(container, tpl) {
			this._super(container, tpl);
		},

		/**
		 * 渲染页面
		 */
		render: function() {
			this._super();

			this.initPageEvent();

			this.initPageData();
		}

	});

	module.exports = Item;

});