define(function (require, exports, module) {
    "use strict";

    var ItemBase = require('../item-base');

    /**
     * Workflow Item
     */
    module.exports = ItemBase.extend({
        // 保存/提交接口
        saveAction: 'tpr/saveOrSubmitTrpTask.action',
        // 批量保存/提交接口
        batchSaveAction: 'tpr/batchSaveOrSubmitTrpTask.action',
        // 查询接口
        detailAction: 'tpr/searchTrpDetail.action',

        /**
         * 添加行
         */
        addTableRow: function () {
            // 添加行
            var tb = this.$("tbody[data-name='trueOrFalseTb']");
            var optionText = "";
            if (this.data.info.bookFascicleList) {
                for (var i = 0; i < this.data.info.bookFascicleList.length; i++) {
                    optionText += "         <option value='" + this.data.info.bookFascicleList[i].bookFascicleId + "'>" + this.data.info.bookFascicleList[i].bookFascicleBookName + "</option>";
                }
            }
            var idx = tb.children().length + 1;
            tb.append(
                "<tr>" +
                "   <td data-name='orderNo'>" + idx + "</td>" +
                "   <td>" +
                "       <div class='form-group'>" +
                "           <div class='col-xs-12'>" +
                "               <select name='fascicule' class='form-control' data-fv-notempty='true' data-fv-field='fascicule'>" + optionText + "</select>" +
                "           </div>" +
                "       </div>" +
                "   </td>" +
                "   <td>" +
                "       <div class='form-group'>" +
                "           <div class='col-xs-12'>" +
                "               <input type='text' class='form-control page" + idx + "' name='pageNum' placeholder='页码'  maxlength='3' pattern='^[1-9][0-9]*$' data-fv-regexp-message='请输入大于0的整数' data-fv-notempty='true' data-fv-notempty-message='请填写页码'/>" +
                "           </div>" +
                "       </div>" +
                "   </td>" +
                "   <td>" +
                "       <div class='form-group'>" +
                "           <div class='col-xs-12'>" +
                "               <input type='text' class='form-control row" + idx + "' name='rowNum' placeholder='行'  maxlength='2' pattern='^[1-9][0-9]*$' data-fv-regexp-message='请输入大于0的整数' data-fv-notempty='true' data-fv-notempty-message='请填写行'/>" +
                "           </div>" +
                "       </div>" +
                "   </td>" +
                "   <td>" +
                "       <div class='form-group'>" +
                "           <div class='col-xs-12'>" +
                "               <input type='text' class='form-control info" + idx + "' name='wrongInfo' placeholder='内容' maxlength='128' data-fv-notempty='true' data-fv-notempty-message='请填写内容'/>" +
                "           </div>" +
                "       </div>" +
                "   </td>" +
                "   <td>" +
                "<button class='removeTableRow btn btn-xs btn-danger'><i class='fa fa-minus box'></i></button></td>" +
                "</tr>"
            );
            this.recalculateDiff();
            this.addValidateField(this.$(".page" + idx));
            this.addValidateField(this.$(".row" + idx));
            this.addValidateField(this.$(".info" + idx));
        },

        /**
         * 重新计算差错
         */
        recalculateDiff: function () {
            var that = this;
            var diffInfo = [];
            for (var i = 0; i < that.data.info.bookFascicleList.length; i++) {
                var obj = that.data.info.bookFascicleList[i];
                diffInfo.push({fasciculeId: obj.bookFascicleId, fasciculeName: obj.bookFascicleBookName, totalCount: obj.tprQualityWordNum, diffCount: 0});
            }
            this.$("tbody[data-name='trueOrFalseTb']").children().each(function () {
                var fasciculeId = that.data.isEdit ? $(this).find('select').val() : $(this).attr("data-fascicule-id");
                var exist = false;// 正常情况下肯定会存在，不存在应该是数据返错了
                for (var k = 0; k < diffInfo.length; k++) {
                    if (diffInfo[k].fasciculeId === fasciculeId) {
                        diffInfo[k].diffCount++;
                        exist = true;
                        break;
                    }
                }
                if (!exist) {
                    diffInfo.push({fasciculeId: fasciculeId, fasciculeName: '', totalCount: 0, diffCount: 1});
                }
            });
            var diffTbHtml = "";
            for (var m = 0; m < diffInfo.length; m++) {
                diffTbHtml +=
                    "<tr  data-fascicule-id='" + diffInfo[m].fasciculeId + "'>" +
                    "   <td>" + (m + 1) + "</td>" +
                    "   <td>" + diffInfo[m].fasciculeName + "</td>" +
                    "   <td data-name='diffCount'>" + diffInfo[m].diffCount + "</td>" +
                    "   <td data-name='diffRate'>" + (diffInfo[m].diffCount / diffInfo[m].totalCount * 10000).toFixed(2) + "</td>" +
                    "</tr>";
            }
            this.$("tbody[data-name='diffTb']").html(diffTbHtml);
        },

        /**
         * 生成参数
         */
        getFormData: function () {
            var params = {rightWrongList: [], bookWrongList: []};
            // 正误表数据
            this.$("tbody[data-name='trueOrFalseTb']").children().each(function () {
                params.rightWrongList.push({
                    bookFascicleId: $(this).find("select[name='fascicule']").val(),
                    page: $(this).find("input[name='pageNum']").val(),
                    line: $(this).find("input[name='rowNum']").val(),
                    content: $(this).find("input[name='wrongInfo']").val()
                });
            });
            // 差错表数据
            this.$("tbody[data-name='diffTb']").children().each(function () {
                params.bookWrongList.push({
                    bookFascicleId: $(this).attr("data-fascicule-id"),
                    bookWrongNum: $(this).find("td[data-name='diffCount']").text(),
                    bookWrongRate: $(this).find("td[data-name='diffRate']").text()
                });
            });
            params.handleContentOne = this.$("textarea[name='handleContentOne']").val();
            var handle = this.$('input[name="handleState"]:checked').val();
            var nextFlowIndex = (!handle || handle === '1') ? '0' : '1';
            this.$("div[data-area='nextFlow']").each(function () {
                if ($(this).attr('data-index') === nextFlowIndex) {
                    params.taskUsers = $(this).find("input[name='taskUsers']").attr('data-value');
                    params.flowId = $(this).find("input[name='flowId']").val();
                    params.flowName = $(this).find("input[name='flowName']").val();
                }
            });
            return params;
        },

        /**
         * 初始化页面事件
         */
        initPageEvent: function () {
            var that = this;
            // 添加行
            this.$container.on('click', '.addTableRow', this.addTableRow.bind(this));
            // 删除行
            this.$container.on('click', '.removeTableRow', function () {
                $(this).parents('tr').remove();
                that.recalculateDiff();
                // 重新显示序号
                var orderNo = 1;
                that.$("tbody[data-name='trueOrFalseTb']").find("td[data-name='orderNo']").each(function () {
                    $(this).html(orderNo);
                    orderNo += 1;
                });
            });
            // 分册选择
            this.$container.on('change', 'select[name="fascicule"]', this.recalculateDiff.bind(this));
            // 一校结果
            this.$container.on('change', 'input[name="handleState"]', function () {
                var handle = that.$('input[name="handleState"]:checked').val();
                that.$('div[data-area="nextFlow"]').hide();
                // 通过（默认）
                if (!handle || handle === '1') {
                    that.$("div[data-index='0']").show();
                }
                // 不通过
                else {
                    that.$("div[data-index='1']").show();
                }
            });
        },

        /**
         * 初始化页面数据
         */
        initPageData: function () {
            var that = this;
            this.recalculateDiff();
            // 一校结果
            this.$('div[data-area="nextFlow"]').hide();
            // 通过（默认）
            if (!this.data.info.handleState || this.data.info.handleState === '1') {
                that.$("div[data-index='0']").show();
            }
            // 不通过
            else {
                that.$("div[data-index='1']").show();
            }
        },

        /**
         * 构造函数
         * @param container
         * @param tpl
         */
        init: function (container, tpl) {
            this._super(container, tpl);
        },

        /**
         * 渲染页面
         */
        render: function () {
            this._super();
            this.initPageEvent();
            this.initPageData();
        }
    });
});