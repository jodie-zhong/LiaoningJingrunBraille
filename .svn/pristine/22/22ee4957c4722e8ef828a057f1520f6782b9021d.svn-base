define(function (require, exports, module) {
    "use strict";

    var ItemBase = require('../item-base');

    /**
     * Workflow Item
     */
    module.exports = ItemBase.extend({
        // 保存/提交接口
        saveAction: 'CNQuality/saveOrSubmitCNQuality.action',
        // 批量保存/提交接口
        batchSaveAction: '',
        // 查询接口
        detailAction: 'CNQuality/searchCNQualityDetail.action',

        /**
         * 下一流程切换显示
         */
        changeNexFlow: function () {
            this.$("div[data-area='nextFlow']").hide();
            if (this.$("input[name='handleState']:checked").val() === '1') {
                this.$("div[data-index='1']").show();
                this.$("div[data-index='2']").show();
            } else {
                this.$("div[data-index='0']").show();
            }
        },

        /**
         * 生成参数
         */
        getFormData: function () {
            var params = this._super();
            // 同意付印显示两个下一流程，返回值手动组装
            if (this.$("input[name='handleState']:checked").val() === '1') {
                params.listNext = [];
                this.$("div[data-index='1'],div[data-index='2']").each(function () {
                    params.listNext.push({
                        taskUsers: $(this).find("input[name='taskUsers']").attr("data-value"),
                        flowId: $(this).find("input[name='flowId']").val(),
                        flowName: $(this).find("input[name='flowName']").val(),
                        deptIds: $(this).find("input[name='deptIds']").val(),
                        roleIds: $(this).find("input[name='roleIds']").val(),
                        nextCategory: $(this).find("input[name='nextCategory']").val()
                    });
                });
            }
            return params;
        },

        /**
         * 初始化页面事件
         */
        initPageEvent: function () {
            var that = this;
            // 质检结果切换
            this.$container.on("click", "input[name='handleState']", this.changeNexFlow.bind(this));
        },

        /**
         * 初始化页面数据
         */
        initPageData: function () {
            // 质检结果初始化时切换显示
            this.changeNexFlow();
            // 赋值上次保存的下一任务人
            var that = this;
            var list = that.data.info.nextTaskFlowInfoEntityList;
            if (list && list.length > 0) {
                this.$("div[data-area='nextFlow']").each(function () {
                    for (var i = 0; i < list.length; i++) {
                        if (list[i].flowId === $(this).attr("data-flow")) {
                            var $input = $(this).find("input[name='taskUsers']");
                            $input.val(list[i].nextFlowTaskUserNames);
                            $input.attr("title", list[i].nextFlowTaskUserNames);
                            $input.attr("data-value", list[i].nextFlowTaskUserIds);
                        }
                    }
                });
            }
        },

        /**
         * 构造函数
         * @param container
         * @param tpl
         */
        init: function (container, tpl) {
            this._super(container, tpl);
        },

        /**
         * 渲染页面
         */
        render: function () {
            this._super();
            this.initPageEvent();
            this.initPageData();
        }
    });
});