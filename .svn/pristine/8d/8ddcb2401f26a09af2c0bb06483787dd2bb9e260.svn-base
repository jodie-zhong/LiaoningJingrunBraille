define(function (require, exports, module) {
    "use strict";

    var util = require('../../../common/util');
    var PageBase = require('../../../common/base-page');
    
    // 日志列表模板
    var listTpl = require('./library-list.tpl');
    
    var Module = PageBase.extend(new function () {
        var that;
        var currentPage = 1;
        var searchParams = {};
        // 选中图书id
        var currentBookId = '';

		/**
		 *  查询图书列表
		 */
		function searchBook(){
			that.$('#btnBookFinished').attr('disabled', 'disabled');
            currentBookId = '';
            var params = $.extend({},searchParams);
            params.page = currentPage;
            util.showLoading('');
            util.sendRequest({
                type: 'POST',
                data: params,
                action: 'bookLibrary/searchBookLibraryList.action', 
                success: function (resp) {
                    util.hideLoading();
                    if (resp.code === 0) {
                        that.$('#bookListTable').html(util.template(listTpl, {list:resp.data.records}));
                        // 分页数据
                        that.$('#bookManagePaging').html(that.buildPagination(resp.data.pageNow, resp.data.pageCount));
                    } else {
                        util.showAlert(resp.message);
                    }
                },
                error: function (xhr) {
                    // XHR错误
                    util.hideLoading();
                    console.log(xhr);
                    util.showAlert('查询图书列表出错，请稍后重试！');
                }
            });
		}
		
		/**
		 * 跳转页面
		 */
		function jumpPage(){
			var $el = $(this);
			var page = $el.attr('data-page');
			if(page){
				// 修改页面后重新刷新页面数据
				currentPage = page;
				searchBook();
			}
		}
		
		/**
         * 成品文件查看
         */
        function searchFinishBook() {
        	var params = {
        		bookId : currentBookId
        	};
        	util.showLoading('');
			util.sendRequest({
				type: 'POST',
				data: params,
				action: 'bookLibrary/searchFinishedBookDetail.action',
				success: function(resp) {
					util.hideLoading();
					if(resp.code === 0) {
						var info = resp.data;
						that.openPage('resource/library/library-finished', info);
					} else {
						util.showAlert(resp.message || '查询续约列表出错，请稍后重试！');
					}
				},
				error: function(xhr) {
					// XHR错误
					util.hideLoading();
					console.log(xhr);
					util.showAlert('查询续约列表出错，请稍后重试！');
				}
			});    
        }

        /**
         * 初始化页面事件
         */
        function initPageEvent() {
        	// 查询
			that.$container.on('click', '#btnSearchBook', function(){
            	searchParams = that.buildSearchParams(that.$('#formSearchBook input[data-search],select[data-search]'));
				currentPage = 1;
				searchBook();
			});			
			// 分页
			that.$container.on('click', '#bookManagePaging a', jumpPage);
			// 选中
			that.$container.on('click', '#bookListTable tr', function() {
        		// 选中状态
        		that.$('#bookListTable').find('tr').removeClass('info');
        		$(this).addClass('info');
        		that.$('#btnBookFinished').removeAttr('disabled');
        		var id = $(this).attr('data-bookId');
        		if (id) {
        			currentBookId = id;
        		}        		
        	});
        	// 查看成品文件
        	that.$container.on('click', '#btnBookFinished', function() {
        		searchFinishBook();
        	});
        }

        /**
         * 初始化页面数据
         */
        function initPageData() {
			searchBook();
        }

        /**
         * 初始化时被调用
         */
        this.onInit = function ($el, tpl, data, indexRef) {
            this._super($el, tpl, data, indexRef);
            that = this;
            that.initTemplate(tpl, {});
			// 重新初始化数据
			currentPage = 1;
			searchParams = {};
            // 初始化页面事件
            initPageEvent();

            // 初始化页面数据
            initPageData();
        };

        /**
         * 页面返回事件
         * @param data
         */
        this.onBack = function (data) {
            this._super();

        };

        /**
         * 窗口缩放事件
         */
        this.onResize = function(){
            this._super();
        };

        /**
         * 页面销毁
         */
        this.onDestroy = function () {
            this._super();
        };


    }());

    module.exports = Module;
});