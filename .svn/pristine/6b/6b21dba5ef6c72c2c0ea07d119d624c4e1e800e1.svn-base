define(function (require, exports, module) {
    "use strict";

    var ItemBase = require('../item-base');
    var util = require('../../../../../common/util.js');

    /**
     * Workflow Item
     */
    module.exports = ItemBase.extend({
        // 保存/提交接口
        saveAction: 'tpr/saveOrSubmitTrpTask.action',
        // 批量保存/提交接口
        batchSaveAction: 'tpr/batchSaveOrSubmitTrpTask.action',
        // 查询接口
        detailAction: 'tpr/searchTrpDetail.action',

        /**
         * 生成参数
         */
        getFormData: function () {
            var params = this._super();
            // 勘误表数据
            this.$("#dataTBody").children().each(function () {
                params.rightWrongList.push({
                    // page: $(this).find("input[name='pageNum']").val(),TODO
                    // line: $(this).find("input[name='rowNum']").val(),
                    // wrong: $(this).find("input[name='wrong']").val(),
                    // right: $(this).find("input[name='right']").val(),
                    // checkResult: $(this).find("input[name='checkResult']").val(),
                    // koufen: $(this).find("input[name='koufen']").val()
                });
            });
            return params;
        },

        /**
         * 初始化页面事件
         */
        initPageEvent: function () {
            var that = this;
            // 是否同意监听
            this.$container.on('change', 'input[name="agreeSelection"]', function () {
                var selectionRow = $(this).parents('tr');
                // 同意
                if ($(this).prop('checked')) {
                    // 判断全选
                    var allChecked = true;
                    selectionRow.parent().find('input[name="agreeSelection"]').each(function () {
                        if (!$(this).prop('checked')) {
                            allChecked = false;
                            return false;
                        }
                    });
                    if (allChecked) {
                        $(this).parents('table').find('input[name="agreeSelectionBatch"]').prop('checked', 'checked');
                    }
                }
                // 不同意
                else {
                    // 去掉全选
                    $(this).parents('table').find('input[name="agreeSelectionBatch"]').removeProp('checked');
                }
                // 计算差错率
                that.calculateDiff();
            });
            // 是否批量同意
            this.$container.on('change', 'input[name="agreeSelectionBatch"]', function () {
                var table = $(this).parents('table');
                // 同意
                if ($(this).prop('checked')) {
                    // 设置复选框选中
                    table.find('input[name="agreeSelection"]').prop('checked', 'checked');
                }
                // 不同意
                else {
                    // 设置复选框不选中
                    $(this).parents('table').find('input[name="agreeSelection"]').removeProp('checked');
                }
                // 计算差错率
                that.calculateDiff();
            });
            // 质检结果切换
            this.$container.on("click", "input[name='handleState1']", function () {
                that.$("div[data-area='nextFlow']").hide();
                if (that.$("input[name='handleState1']:checked").val() === '1') {
                    that.$("div[data-index='0']").show();
                } else {
                    that.$("div[data-index='1']").show();
                }
            });
        },

        /**
         * 初始化页面数据
         */
        initPageData: function () {
            // 判断全选
            var allChecked = true;
            this.$('input[name="agreeSelection"]').each(function () {
                // 不同意
                if (!$(this).prop('checked')) {
                    // 去掉全选
                    allChecked = false;
                }
            });
            if (allChecked) {
                this.$('input[name="agreeSelectionBatch"]').prop('checked', 'checked');
            }
            // 质检结果初始化时切换显示
            this.$("div[data-area='nextFlow']").hide();
            if (this.$("input[name='handleState1']:checked").val() === '1') {
                this.$("div[data-index='0']").show();
            } else {
                this.$("div[data-index='1']").show();
            }
        },

        /**
         * 构造函数
         * @param container
         * @param tpl
         */
        init: function (container, tpl) {
            this._super(container, tpl);
        },

        /**
         * 渲染页面
         */
        render: function () {
            this._super();
            this.initPageEvent();
            this.initPageData();
        }
    });
});