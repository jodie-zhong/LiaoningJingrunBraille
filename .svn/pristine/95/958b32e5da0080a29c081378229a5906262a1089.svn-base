define(function (require, exports, module) {
    "use strict";

    var util = require("../../../common/util");
    var DialogBase = require("../../../common/base-dialog");
    var contentTpl = require('./contract-template-dialog-content.tpl');

    module.exports = DialogBase.extend(new function () {
        var that;
        var inParams;

        /**
         * 保存数据
         */
        function saveData() {
            // 没有错误开始处理
            if (that.validate(that.$("#contentDiv"))) {
                var params = {
                    contractTemplateName: that.$("input[name='contractTemplateName']").val(),
                    contractTemplateType: that.$("#contractTemplateType").val(),
                    contractTemplateFileName: that.$("input[name='uploadFile']").val(),
                    contractTemplatePath: that.$("input[name='uploadFile']").attr("data-value"),
                    contractTemplateRemark: that.$("textarea[name='contractTemplateRemark']").val()
                };
                if (!inParams.isAdd) {
                    params.contractTemplateId = inParams.id;
                }
                util.showLoading("正在提交数据...");
                util.sendRequest({
                    action: inParams.isAdd ? "template/createTemplate.action" : "template/modifyTemplate.action",
                    data: params,
                    success: function (resp) {
                        util.hideLoading();
                        if (resp.code === 0) {
                            // 业务执行成功
                            util.showAlert(inParams.isAdd ? "保存成功！" : "修改成功！", function () {
                                that.close({refresh: true});
                            });
                        } else {
                            console.log(resp);
                            util.showAlert(resp.message || "操作失败，请稍后重试！");
                        }
                    },
                    error: function (xhr) {
                        util.hideLoading();
                        console.log(xhr);
                        util.showAlert("操作失败，请稍后重试！");
                    }
                });
            }
        }

        /**
         * 获取数据
         */
        function getData(contractTemplateId) {
            util.showLoading("正在提交数据...");
            util.sendRequest({
                action: "template/searchTemplateDetail.action",
                data: {contractTemplateId: contractTemplateId},
                success: function (resp) {
                    util.hideLoading();
                    if (resp.code === 0) {
                        var form = that.$("#contentDiv");
                        form.html(util.template(contentTpl, {isEdit: inParams.isEdit, info: resp.data}));
                        that.$("input,textarea").each(function () {
                            that.addValidateField(form, $(this));
                        });
                    } else {
                        console.log(resp);
                        util.showAlert(resp.message || "操作失败，请稍后重试！");
                    }
                },
                error: function (xhr) {
                    util.hideLoading();
                    console.log(xhr);
                    util.showAlert("操作失败，请稍后重试！");
                }
            });
        }

        /**
         * 初始化页面事件
         */
        function initPageEvent() {
            // 保存
            that.$container.on("click", "#btnSave", saveData);
            // 下载文件
            that.$container.on("click", ".downloadFile", function () {
                window.open(util.getServerBase() + "template/downloadTemplate.action?path=" + encodeURIComponent($(this).attr("data-download-address")) + "&contractTemplateId=" + inParams.id, "_blank");
            });
            // 文件上传监听
            that.$container.on("change", "input[name='uploadFile']", function () {
                var address = $(this).attr("data-value");
                var downBtn = $(this).parents(".row").find(".downloadFile");
                if (address === "") {
                    downBtn.attr("disabled", "disabled");
                } else {
                    downBtn.removeAttr("disabled");
                }
                downBtn.attr("data-download-address", address);
            });
        }

        /**
         * 初始化页面数据
         */
        function initPageData() {
            that.initValidate(that.$("#contentDiv"));
            // 判断是否获取数据
            if (!inParams.isEdit || !inParams.isAdd) {
                getData(inParams.id);
            } else {
                var form = that.$("#contentDiv");
                form.html(util.template(contentTpl, {isEdit: inParams.isEdit, info: {}}));
                that.$("input,textarea").each(function () {
                    that.addValidateField(form, $(this));
                });
            }
        }

        /**
         * 初始化时被调用
         */
        this.onInit = function ($el, tpl, data, indexRef) {
            this._super($el, tpl, data, indexRef);
            that = this;
            inParams = data;
            that.initTemplate(tpl, {title: data.title});
            // 初始化页面数据
            initPageData();
            // 初始化页面事件
            initPageEvent();
        };

        /**
         * 页面返回事件
         * @param data
         */
        this.onBack = function (data) {
            this._super(data);
        };

        /**
         * 窗口缩放事件
         */
        this.onResize = function () {
            this._super();
        };

        /**
         * 页面销毁
         */
        this.onDestroy = function () {
            this._super();
        };
    }());
});