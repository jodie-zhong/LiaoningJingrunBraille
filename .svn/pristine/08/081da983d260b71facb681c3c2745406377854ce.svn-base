define(function (require, exports, module) {
    "use strict";

    var util = require('../../../common/util');
    var DialogBase = require('../../../common/base-dialog');

    var Module = DialogBase.extend(new function () {
        var that;
        var info = null;
        var bookDate={};

        /**
         * 保存数据
         */
        function saveReportInfo(isSubmit){
            if(bookDate.id){
                // 表单验证
                var $form = that.$('#formReportEdit');
                // 没有错误开始处理
                if (that.validate($form) === true) {
                    // 通过公共方法生成表单参数
                    var params = that.buildFormParams($form.find('input,textarea'));
                    params.bookIds=bookDate.id;
                    params.isbncipApplyId='';
                    var action = 'cipEditionApply/createOrModifyApplication.action';
                    var actionName = '新增';
                    params.operationType = isSubmit ? '2' : '1';
                    // 如果有currentBookId则是修改
                    if (info && info.currentBookId) {
                        // params.currentBookId = info.currentBookId;
                        actionName = '修改';
                        params.isbncipApplyId=info.isbncipApplyId;
                    }
                    // 下发请求
                    util.showLoading();
                    util.sendRequest({
                        type: 'POST',
                        data: params,
                        action: action,
                        success: function (resp) {
                            util.hideLoading();
                            console.log(resp);
                            if (resp.code === 0) {
                                // 业务执行成功
                                util.showAlert('数据保存成功!', function(){
                                    that.close({refresh: true});
                                });
                            } else {
                                // 业务执行失败
                                util.showAlert(resp.message || actionName + '列表出错，请稍后重试！');
                            }
                        },
                        error: function (xhr) {
                            // XHR错误
                            util.hideLoading();
                            console.log(xhr);
                            util.showAlert(actionName + '上报列表出错，请稍后重试！');
                        }
                    });
                }
            }else{
                util.showAlert("没有选择任何一本书");
            }
        }

        /**
         * 下载页面
         */
        function downLoadBook() {
            var cipApplyName=$('input[name="isbncipApplyName"]').val();
            if(bookDate.id){
                var url = util.getServerBase() + 'cipEditionApply/doDownload.action?';
                url += 'bookIds=' + bookDate.id;
                url += '&isbncipApplyName='+encodeURIComponent(cipApplyName);

                window.open(url, '_blank');
            }
        }

        /**
         * 初始化页面事件
         */
        function initPageEvent() {
            //图书添加
            that.$container.on('click', '#btnAddBook', function () {
                that.openPage('manage/cip-version/cip-version-select',bookDate);
            });
            // 保存（一定要检查有没有一本书都没选的）
            that.$container.on('click', '#btnCipSave', function(){
                saveReportInfo(false);
            });
            // 提交（一定要检查有没有一本书都没选的）
            that.$container.on('click', '#btnCipSubmit', function(){
                saveReportInfo(true);
            });
            // 每本书的删除事件
            that.$container.on('click', 'button.book-delete', function () {
                var $el=$(this);
                var id=$el.attr('data-id');
                var ids=bookDate.id.split(',');
                var bookNames=bookDate.name.split(',');
                var index=$.inArray(id,ids);
                if (index >= 0){
                    ids.splice(index, 1);
                    bookNames.splice(index, 1);
                }
                var $tbody=$("#selectBookTable");
                // 重新渲染tobdy
                $tbody.empty();
                for(var i=0;i<bookNames.length;i++){
                    var bookTr=$('<tr><td>'+(i + 1+ length)+'</td><td>'+ bookNames[i]+'</td><td><button data-id="' + ids[i] +'" data-name="' +bookNames[i] +'" class="btn btn-xs btn-danger btn-rounded book-delete">删除</button></td></tr>');
                    $tbody.append(bookTr);
                }
                if(ids){
                    bookDate={
                        id: ids.join(','),
                        name: bookNames.join(',')
                    };
                }
            });
            //下载事件
            that.$container.on('click', '#btnDownloadBook',downLoadBook);
            //查看事件
            that.$container.on('click', '#btnDetailBook',function () {
                if(bookDate.id){
                    util.sendRequest({
                        data: {bookIds:bookDate.id},
                        action: 'cipEditionApply/searchBookInfoList.action',
                        success: function (resp) {
                            console.log(resp);
                            if (resp.code === 0) {
                                that.openPage('braille/cip-version/cip-version-search',resp);
                            } else {
                                // 业务执行失败
                                util.showAlert(resp.message || '查询出错，请稍后重试！');
                            }
                        },
                        error: function (xhr) {
                            // XHR错误
                            console.log(xhr);
                            util.showAlert( '查询出错，请稍后重试！');
                        }
                    });
                }
            });
        }

        /**
         * 初始化页面数据
         */
        function initPageData() {

            // 修改模式有数据，渲染模板
            if(info.bookNameList){
                var addIds=[],bookNames=[];
                for(var i=0;i<info.bookNameList.length;i++){
                    for(var j in info.bookNameList[i]){
                        if(j==='bookId'){
                            addIds.push(info.bookNameList[i][j]);
                        }
                        if(j==='bookName'){
                            bookNames.push(info.bookNameList[i][j]);
                        }
                    }
                }
                var $tbody=$("#selectBookTable");
                for(var i=0;i<addIds.length;i++){
                    var bookTr=$('<tr><td>'+(i + 1+ length)+'</td><td>'+ bookNames[i]+'</td><td><button data-id="' + addIds[i] +'" data-name="' +bookNames[i] +'" class="btn btn-xs btn-danger btn-rounded book-delete">删除</button></td></tr>');
                    $tbody.append(bookTr);
                }
                bookDate={
                    id: addIds.join(','),
                    name: bookNames.join(',')
                }
            }

            that.initValidate(that.$('#formReportEdit'));
        }

        /**
         * 初始化时被调用
         */
        this.onInit = function ($el, tpl, data, indexRef) {
            this._super($el, tpl, data, indexRef);
            that = this;
            info = data;
            console.log(info);
            // setModifyBookList();
            that.initTemplate(tpl, {info: info});
            // 初始化页面事件
            initPageEvent();
            // 初始化页面数据
            initPageData();
        };

        /**
         * 页面返回事件
         * @param data
         */
        this.onBack = function (data) {
            this._super(data);
            if(data){
                bookDate=data;
                console.log(data);
                var length=$('#selectBookTable tr').length;
                var ids=[], names=[];
                if(data.id.indexOf(',') >= 0){
                    ids=data.id.split(',');
                }else{
                    ids[0]=data.id
                }
                if(data.id.indexOf(',') >= 0){
                    names=data.name.split(',');
                }else{
                    names[0]=data.name
                }
                //将数据添加到已有的table表格数据后
                var $tbody=$("#selectBookTable");
                for(var i=0;i<names.length;i++){
                    var bookTr=$('<tr><td>'+(i + 1+ length)+'</td><td>'+ names[i]+'</td><td><button data-id="' + ids[i] +'" data-name="' +names[i] +'" class="btn btn-xs btn-danger btn-rounded book-delete">删除</button></td></tr>');
                    $tbody.append(bookTr);
                }
                // 获取渲染后的所有tr上的id与name，将bookDate替换
                var newId=[],newName=[];
                $("#selectBookTable tr").each(function () {
                    var $el1=$(this);
                    newId.push($el1.find('button').attr('data-id'));
                    newName.push($el1.find('button').attr('data-name'));
                })
                bookDate={
                    id:newId.join(','),
                    name:newName.join(',')
                }
            }
        };

        /**
         * 窗口缩放事件
         */
        this.onResize = function () {
            this._super();
        };

        /**
         * 页面销毁
         */
        this.onDestroy = function () {
            this._super();
        };


    }());

    module.exports = Module;
});