define(function (require, exports, module) {
    "use strict";

    var ItemBase = require('../item-base');
    var util = require('../../../../../common/util.js');

    /**
     * Workflow Item
     */
    module.exports = ItemBase.extend({
        // 保存/提交接口
        saveAction: 'tpr/saveOrSubmitTaskAllocation.action',
        // 批量保存/提交接口
        batchSaveAction: 'bookTopic/batchReview.action',
        // 查询接口
        detailAction: 'tpr/searchBookTrpDetail.action',

        /**
         * 添加行
         */
        addTableRow: function () {
            // 添加行
            var tb = $("#trueOrFalseTb");
            tb.append(
                "<tr>" +
                "   <td>" + (tb.children().length + 1) + "</td>" +
                "   <td>" +
                "      <select name='fascicule' class='form-control' data-fv-notempty='true' data-fv-field='fascicule'>" +
                "         <% if(info.fasciculeArray) %>" +
                "         <% for(var i = 0; i < info.fasciculeArray.length; i++){ %>" +
                "         <option value='<%- (i + 1) %>'><%- info.fasciculeArray[i] %></option>" +
                "         <% } %>" +
                "      </select>" +
                "   </td>" +
                "   <td>" +
                "      <input type='text' class='form-control' name='pageNum' placeholder='页码' maxlength='10'/>" +
                "   </td>" +
                "   <td>" +
                "      <input type='text' class='form-control' name='rowNum' placeholder='行' maxlength='10'/>" +
                "   </td>" +
                "   <td>" +
                "       <input type='text' class='form-control' name='wrongInfo' placeholder='内容' maxlength='128'/>" +
                "   </td>" +
                "   <td>" +
                "      <button class='removeTableRow btn btn-xs btn-danger'>" +
                "          <i class='fa fa-minus box'></i>" +
                "      </button>" +
                "   </td>" +
                "</tr>"
            );
        },

        /**
         * 删除行
         */
        removeTableRow: function () {
            $(this).parent().parent().remove();
        },

        /**
         * 重新计算差错
         */
        recalculateDiff: function () {
            var resultArray = this.data.array;// TODO
            var totalCount = this.data.totalCount;// TODO
            // 计算差错
            $("#trueOrFalseTb").find("select[name='fascicule']").each(
                function () {
                    resultArray[this.val() - 1].diffCount++;
                }
            );
            // 拼接差错计算表内容
            var htmlContent = "";
            for (var i = 0; i < resultArray.length; i++) {
                htmlContent += "<td>" + (i + 1) + "</td>" + "<td>" + resultArray.fascicule + "</td>" + "<td>" + resultArray.diffCount + "</td>" + "<td>" + (resultArray.diffCount / totalCount) + "</td>";// TODO
            }
            $("diffTb").html(htmlContent);
        },

        /**
         * 初始化页面事件
         */
        initPageEvent: function () {
            // 添加行
            this.$container.on('click', '.addTableRow', this.addTableRow);
            // 删除行
            this.$container.on('click', '.removeTableRow', this.removeTableRow);
        },

        /**
         * 初始化页面数据
         */
        initPageData: function () {
        },

        /**
         * 构造函数
         * @param container
         * @param tpl
         */
        init: function (container, tpl) {
            this._super(container, tpl);
        },

        /**
         * 渲染页面
         */
        render: function () {
            this._super();
            this.initPageEvent();
            this.initPageData();
        }
    });
});